{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","time","Date","toLocaleTimeString","timerId","undefined","setInterval","setState","console","log","this","prevProps","props","clockName","clearInterval","React","makeName","length","result","characters","charactersLength","i","charAt","Math","floor","random","App","isClockVisible","showClock","hideClock","setRandomName","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"6MAWaA,EAAb,4MACEC,MAAe,CACbC,MAAM,IAAIC,MAAOC,qBACjBC,aAASC,GAHb,uDAME,WAAqB,IAAD,OACZD,EAAUE,aAAY,WAC1B,IAAQL,EAAS,EAAKD,MAAdC,KAER,EAAKM,SAAS,CAAEN,MAAM,IAAIC,MAAOC,uBAGjCK,QAAQC,IAAIR,KACX,KAEHS,KAAKH,SAAS,CAAEH,cAhBpB,gCAmBE,SAAmBO,GACbD,KAAKE,MAAMC,YAAcF,EAAUE,WAErCL,QAAQC,IAAR,qCAA0CE,EAAUE,UAApD,eAAoEH,KAAKE,MAAMC,cAtBrF,kCA0BE,WACMH,KAAKV,MAAMI,SACbU,cAAcJ,KAAKV,MAAMI,WA5B/B,oBAgCE,WACE,OACE,mCACIM,KAAKV,MAAMC,WAnCrB,GAA2Bc,aCP3B,SAASC,EAASC,GAMhB,IALA,IAAIC,EAAS,GACPC,EAAa,6BACbC,EAAmBD,EAAWF,OAG3BI,EAAI,EAAGA,EAAIJ,EAAQI,IAC1BH,GAAUC,EAAWG,OAAOC,KAAKC,MAAMD,KAAKE,SAC1CL,IAGJ,OAAOF,EAQF,IAAMQ,EAAb,4MACE1B,MAAQ,CACN2B,gBAAgB,EAChBd,UAAW,WAHf,EAMEe,UAAY,WACV,EAAKrB,SAAS,CAAEoB,gBAAgB,KAPpC,EAUEE,UAAY,WACV,EAAKtB,SAAS,CAAEoB,gBAAgB,KAXpC,EAcEG,cAAgB,WACd,EAAKvB,SAAS,CAAEM,UAAWG,EAAS,OAfxC,4CAkBE,WACE,MAAsCN,KAAKV,MAAnCa,EAAR,EAAQA,UAAWc,EAAnB,EAAmBA,eAEnB,OACE,qBAAKI,UAAU,MAAf,SACE,sBAAKA,UAAU,WAAf,UACE,sBAAKA,UAAU,QAAf,UACE,oBAAIA,UAAU,cAAd,gCAA6ClB,EAA7C,OACA,8CAEG,IACAc,GAAkB,cAAC,EAAD,CAAOd,UAAWA,UAIzC,sBAAKkB,UAAU,UAAf,UACE,wBACEA,UAAU,SACVC,KAAK,SACLC,QAASvB,KAAKmB,UAHhB,oCAQA,wBACEE,UAAU,SACVC,KAAK,SACLC,QAASvB,KAAKoB,cAHhB,6BAQA,wBACEC,UAAU,SACVC,KAAK,SACLC,QAASvB,KAAKkB,UAHhB,gDAlDZ,GAAyBb,aCpBzBmB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1507005f.chunk.js","sourcesContent":["import * as React from 'react';\n\ninterface State {\n  time: string;\n  timerId: NodeJS.Timer | undefined,\n}\n\ninterface Props {\n  clockName: string;\n}\n\nexport class Clock extends React.Component<Props, State> {\n  state: State = {\n    time: new Date().toLocaleTimeString(),\n    timerId: undefined,\n  };\n\n  componentDidMount() {\n    const timerId = setInterval(() => {\n      const { time } = this.state;\n\n      this.setState({ time: new Date().toLocaleTimeString() });\n\n      // eslint-disable-next-line no-console\n      console.log(time);\n    }, 1000);\n\n    this.setState({ timerId });\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (this.props.clockName !== prevProps.clockName) {\n      // eslint-disable-next-line no-console\n      console.log(`The Clock was renamed from ${prevProps.clockName} to ${this.props.clockName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.state.timerId) {\n      clearInterval(this.state.timerId);\n    }\n  }\n\n  render() {\n    return (\n      <>\n        { this.state.time }\n      </>\n    );\n  }\n}\n","import * as React from 'react';\nimport './App.scss';\nimport { Clock } from './Clock';\n\nfunction makeName(length: number) {\n  let result = '';\n  const characters = 'abcdefghijklmnopqrstuvwxyz';\n  const charactersLength = characters.length;\n\n  // eslint-disable-next-line no-plusplus\n  for (let i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random()\n    * charactersLength));\n  }\n\n  return result;\n}\n\ninterface State {\n  isClockVisible: boolean;\n  clockName: string;\n}\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isClockVisible: true,\n    clockName: 'a clock',\n  };\n\n  showClock = () => {\n    this.setState({ isClockVisible: true });\n  };\n\n  hideClock = () => {\n    this.setState({ isClockVisible: false });\n  };\n\n  setRandomName = () => {\n    this.setState({ clockName: makeName(10) });\n  };\n\n  render() {\n    const { clockName, isClockVisible } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"allClock\">\n          <div className=\"clock\">\n            <h1 className=\"clock__name\">{`React clock \"${clockName}\"`}</h1>\n            <p>\n              Current time:\n              {' '}\n              {isClockVisible && <Clock clockName={clockName} /> }\n            </p>\n          </div>\n\n          <div className=\"buttons\">\n            <button\n              className=\"button\"\n              type=\"button\"\n              onClick={this.hideClock}\n            >\n              Hide ClockðŸ’€\n            </button>\n\n            <button\n              className=\"button\"\n              type=\"button\"\n              onClick={this.setRandomName}\n            >\n              Set random name\n            </button>\n\n            <button\n              className=\"button\"\n              type=\"button\"\n              onClick={this.showClock}\n            >\n              Show ClockðŸ’€\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}